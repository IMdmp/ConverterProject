plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.imdmp.converter"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            buildConfigField "String", "BASE_API_URL", "\"https://api.apilayer.com/\""
            buildConfigField "String", "API_KEY","\"${properties.getProperty('API_KEY')}\""
        }

        release {
            buildConfigField "String", "BASE_API_URL", "\"https://api.apilayer.com/\""
            buildConfigField "String", "API_KEY","\"\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"


    implementation 'com.jakewharton.timber:timber:5.0.1'

    debugImplementation 'com.facebook.flipper:flipper:0.164.0'
    debugImplementation 'com.facebook.soloader:soloader:0.10.4'
    debugImplementation 'com.facebook.flipper:flipper-network-plugin:0.164.0'
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    def daggerVersion = "2.35.1"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"

    kapt("org.xerial:sqlite-jdbc:3.34.0")
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "com.github.skydoves:landscapist-glide:1.3.5"

    def okHttpVersion = "4.9.1"
    implementation "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okHttpVersion}"

    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'
    testImplementation "org.json:json:20210307"

    def mockitoVersion = "3.2.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:${mockitoVersion}"
    def coroutine_test_version = "1.6.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_test_version"

    def mockito_inline_version= "3.8.0"
    testImplementation("org.mockito:mockito-inline:$mockito_inline_version")
}